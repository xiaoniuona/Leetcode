Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....
For example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is [1, 6, 2, 5, 3, 4].

/*
A[0] <= A[1] >= A[2] <= A[3] >= A[4] <= A[5]
So we could actually observe that there is pattern that
A[even] <= A[odd],
A[odd] >= A[even].

Therefore we could go through the array and check this condition does not hold, just swap.
*/
public class Solution {
    public void wiggleSort(int[] nums) {
        if(nums==null || nums.length<=1) return;
        
        for(int i=0; i<nums.length-1; i++){
            if(i%2==0){
                if(nums[i]>nums[i+1]){
                    swap(nums,i,i+1);
                }
            }
            else if(i%2==1){
                if(nums[i]<=nums[i+1]){
                    swap(nums,i,i+1);
                }
            }
        }
    }
    public void swap(int[] nums, int i, int j){
        int tmp=nums[i];
        nums[i]=nums[j];
        nums[j]=tmp;
    }
}
