Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), determine if a person could 
attend all meetings.

For example,
Given [[0, 30],[5, 10],[15, 20]],
return false.


/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
 /* Check if there are any overlapping between intervals
 How to check if 2 intervals are overlaping? There are many situations, but if they are not overlaping:
(1) [s1, e1]  [s2, e2]：即s2>e1 
(2) [s2, e2]  [s1, e1]：即s1>e2

not overlaping：s2>e1 || s1>e2，otherwise they are overlaping
*/
public class Solution {
    public boolean canAttendMeetings(Interval[] intervals) {
        Arrays.sort(intervals,new Comparator<Interval>(){
            public int compare(Interval i1, Interval i2){
                return i1.start-i2.start;
            }
        });
        for(int i=1; i<intervals.length; i++){
            if(intervals[i].start>=intervals[i-1].end) continue;
            else return false;
        }
        return true;
    }
}
