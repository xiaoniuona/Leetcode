Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int closestValue(TreeNode root, double target) {
        TreeNode kid=target<root.val?root.left:root.right;
        if(kid==null) return root.val;
        int closest=closestValue(kid,target);
        return Math.abs(closest-target)<Math.abs(target-root.val)?closest:root.val;
    }
}
